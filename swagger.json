{
  "swagger" : "2.0",
  "info" : {
    "version" : "0.0.1",
    "title" : "Drone REST API"
  },
  "basePath" : "/api/v1",
  "schemes" : [ "http" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/categories" : {
      "get" : {
        "tags" : [ "category" ],
        "description" : "Get all categories",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Category"
              }
            }
          }
        }
      }
    },
    "/dronePosition/{id}" : {
      "get" : {
        "tags" : [ "drone" ],
        "description" : "Get a list of positions of a drone",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of drone",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "the search offset",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the search limit",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200"
            }
          },
          "400" : {
            "description" : "invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "drone not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        }
      }
    },
    "/drones" : {
      "get" : {
        "tags" : [ "drone" ],
        "description" : "Get all drones",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Drone"
              }
            }
          }
        }
      }
    },
    "/drones/{id}" : {
      "put" : {
        "tags" : [ "drone" ],
        "description" : "Update a drone's location",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "the drone location data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DroneUpdateReq"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Drone"
            }
          },
          "400" : {
            "description" : "invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "drone not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        }
      }
    },
    "/forgot-password" : {
      "post" : {
        "tags" : [ "auth" ],
        "description" : "Send forgot password email",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "request values",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "invalid email",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "user not registered",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        }
      }
    },
    "/login" : {
      "post" : {
        "tags" : [ "auth" ],
        "description" : "Authenticate the user with email and password",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "request data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body_1"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LoginRes"
            }
          },
          "400" : {
            "description" : "Missing email or password | invalid email",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Invalid  password",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "User is not registered",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        }
      }
    },
    "/login/social" : {
      "post" : {
        "tags" : [ "auth" ],
        "description" : "Authenticate the user via social network (if not registered, it should auto-register)",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "request data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body_2"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LoginRes"
            }
          },
          "400" : {
            "description" : "Missing type or accessToken | not supported type | invalid access token",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        }
      }
    },
    "/mission/{id}/review" : {
      "post" : {
        "tags" : [ "review" ],
        "description" : "Submit review for a mission",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the mission id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "request data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body_3"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "invalid parameters | mission not completed | duplicate review",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "missing bearer token",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "no permission to access this missing",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "mission not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/missions" : {
      "get" : {
        "tags" : [ "mission" ],
        "description" : "Search missions",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "the search offset",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the search limit",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_1"
            }
          },
          "400" : {
            "description" : "invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        }
      }
    },
    "/missions/{id}" : {
      "get" : {
        "tags" : [ "mission" ],
        "description" : "Get missions details",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the mission id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_2"
            }
          },
          "400" : {
            "description" : "invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "missing bearer token",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "no permissions to access this mission",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "mission not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/notifications" : {
      "get" : {
        "tags" : [ "notification" ],
        "description" : "Get user notifications",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "the search offset",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the search limit",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Notification"
              }
            }
          },
          "400" : {
            "description" : "invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "missing bearer token",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/notifications/{id}/read" : {
      "post" : {
        "tags" : [ "notification" ],
        "description" : "Mark notification as read",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the notification id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "missing bearer token",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "notification belongs to other user",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "notification not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/packages" : {
      "get" : {
        "tags" : [ "package" ],
        "description" : "Search packages",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "the search offset",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the search limit",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "the type of packages to show `popular`, `promoted`",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "longitude",
          "in" : "query",
          "description" : "the longitude of the user",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "latitude",
          "in" : "query",
          "description" : "the latitude of the user",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "maxDistance",
          "in" : "query",
          "description" : "the max distance to search (in meters) from longitude, latitude",
          "required" : true,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_3"
            }
          }
        }
      }
    },
    "/packages/{id}" : {
      "get" : {
        "tags" : [ "package" ],
        "description" : "Get package details",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the package id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_4"
            }
          },
          "400" : {
            "description" : "invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "package not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        }
      }
    },
    "/packages/{id}/related" : {
      "get" : {
        "tags" : [ "package" ],
        "description" : "Get related packages (packages user might like)",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the package id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/inline_response_200_5"
              }
            }
          },
          "400" : {
            "description" : "invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "package not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        }
      }
    },
    "/packages/{id}/request" : {
      "post" : {
        "tags" : [ "request", "package" ],
        "description" : "Request a pacakge",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the package id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "request data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body_4"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "missing bearer token",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "package not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/provider/dashboard" : {
      "get" : {
        "tags" : [ "dashboard" ],
        "description" : "Get the dashboard information for thee current logged in user. Provider role only.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_6"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/provider/drones" : {
      "get" : {
        "tags" : [ "drone" ],
        "description" : "Search drones that the current logged in user provides. Provider role only.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "the search limit",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "the search offset",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "statuses",
          "in" : "query",
          "description" : "the drone statuses filter. Allowed `in-motions`, `idle-ready`, `idle-busy` (refer to `Const.DroneStatus` in js model)",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "the sort field. Allowed `serialNumber`, `name`, `type`, `mileage`. Default order is ascending. Prefix with `-` for descending order e.g. `-name`",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_7"
            }
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "drone" ],
        "description" : "Create a drone for the current logged in user. Provider role only.",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "the drone request data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Drone"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/Drone"
            }
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/provider/drones/current-locations" : {
      "get" : {
        "tags" : [ "drone" ],
        "description" : "Get status and location of all drones of the current logged in user. Provider role only.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/inline_response_200_8"
              }
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/provider/drones/{droneId}/missions" : {
      "get" : {
        "tags" : [ "drone" ],
        "description" : "Get drone missions for the current logged in user. Always sort by mission start time DESC. Provider role only.",
        "parameters" : [ {
          "name" : "droneId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "the mission start date filter, e.g. 15-Nov-2016",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "the mission status filter. Allowed `waiting`, `in-progress`, `completed`",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the search limit",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/inline_response_200_9"
              }
            }
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "Not found. Current logged in provider does not have this drone",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/provider/drones/{droneId}/missions/monthly-count" : {
      "get" : {
        "tags" : [ "drone" ],
        "description" : "Get the number of drone missions for each day in a specific month for the current logged in user. Provider role only.",
        "parameters" : [ {
          "name" : "droneId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "month",
          "in" : "query",
          "description" : "the month to count, e.g. Nov-2016",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/inline_response_200_10"
              }
            }
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "Not found. Current logged in provider does not have this drone",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/provider/drones/{id}" : {
      "get" : {
        "tags" : [ "drone" ],
        "description" : "Get detail of a drone",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Drone"
            }
          },
          "400" : {
            "description" : "invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "drone not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "drone" ],
        "description" : "Update a drone for the current logged in user. Provider role only.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "the drone request data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Drone"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/Drone"
            }
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "Not found. Current logged in provider does not have this drone",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "drone" ],
        "description" : "Delete a drone for the current logged in user. Provider role only.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful operation"
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "Not found. Current logged in provider does not have this drone",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/provider/requests" : {
      "get" : {
        "tags" : [ "request" ],
        "description" : "Search package requests of the current logged in user. Sort by request's created date DESC. Provider role only.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "the search limit",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "the search offset",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "statuses",
          "in" : "query",
          "description" : "the request statuses filter. Refer to `Const.RequestStatus` in js model",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }, {
          "name" : "launchDate",
          "in" : "query",
          "description" : "the launch date filter",
          "required" : false,
          "type" : "string",
          "format" : "date"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_11"
            }
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/provider/requests/{id}" : {
      "get" : {
        "tags" : [ "request" ],
        "description" : "Get details of a request of the current logged in user. Provider role only.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the request id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_12"
            }
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "Not found. The provider does not have this request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/provider/requests/{id}/accept" : {
      "post" : {
        "tags" : [ "request" ],
        "description" : "Accept a new/pending request of the current logged in user, then generate a notification to customer. Provider role only.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the request id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "Not found. The provider does not have this request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/provider/requests/{id}/assign-drone" : {
      "post" : {
        "tags" : [ "request" ],
        "description" : "Assign drone to a pending request of the current logged in user. Provider role only.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the request id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "the request data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AssignDroneReq"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "Not found. The provider does not have this request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/provider/requests/{id}/cancel" : {
      "post" : {
        "tags" : [ "request" ],
        "description" : "Cancel a scheduled / in-progress request of the current logged in user, then generate a notification to customer. Provider role only.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the request id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "Not found. The provider does not have this request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/provider/requests/{id}/complete" : {
      "post" : {
        "tags" : [ "request" ],
        "description" : "Complete a request of the current logged in user, then generate a notification to customer. Provider role only.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the request id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "Not found. The provider does not have this request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/provider/requests/{id}/mission-estimation" : {
      "post" : {
        "tags" : [ "request" ],
        "description" : "Update mission estimation of an in-progress request of the current logged in user. Provider role only.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the request id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "the request data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MissionEstimationReq"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "Not found. The provider does not have this request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/provider/requests/{id}/mission-telemetry" : {
      "post" : {
        "tags" : [ "request" ],
        "description" : "Update mission telemetry of a completed request of the current logged in user. Provider role only.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the request id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "the request data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MissionTelemetryReq"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "Not found. The provider does not have this request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/provider/requests/{id}/reject" : {
      "post" : {
        "tags" : [ "request" ],
        "description" : "Reject a new/pending request of the current logged in user, then generate a notification to customer. Provider role only.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the request id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "Not found. The provider does not have this request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/provider/services" : {
      "get" : {
        "tags" : [ "service" ],
        "description" : "Search services that the current logged in user provides. Provider role only.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "the search limit",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "the search offset",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "the sort field. Allowed `name`, `pricing`. Default order is ascending. Prefix with `-` for descending order e.g. `-name`.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_13"
            }
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "service" ],
        "description" : "Create a new service with its packages for the current logged in user. Provider role only.",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "the service and packages request data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Service"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/Service"
            }
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/provider/services/{id}" : {
      "get" : {
        "tags" : [ "service" ],
        "description" : "Get the service and its packages for the current logged in user. Provider role only.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/Service"
            }
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "Not found. Current logged in provider does not offer this service",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "service" ],
        "description" : "Update the service and create/update/delete its packages for the current logged in user. Provider role only.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "the service and its packages request data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Service"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/Service"
            }
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "Not found. Current logged in provider does not offer this service",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "service" ],
        "description" : "Delete the service and its packages for the current logged in user. Provider role only.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful operation"
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "Anonymous is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "403" : {
            "description" : "Non-provider is not allowed to access",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "Not found. Current logged in provider does not offer this service",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/providers" : {
      "get" : {
        "tags" : [ "provider" ],
        "description" : "Search provders",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "the search offset",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the search limit",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "the sort field. Allowed `popularity`, `date`, `price`. Default order is ascending. Prefix with `-` for descending order e.g. `-price`.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "longitude",
          "in" : "query",
          "description" : "the longitude of the user",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "latitude",
          "in" : "query",
          "description" : "the latitude of the user",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "minPrice",
          "in" : "query",
          "description" : "the min price of package",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "maxPrice",
          "in" : "query",
          "description" : "the max price of package",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "maxDistance",
          "in" : "query",
          "description" : "the max distance to search (in meters) from longitude, latitude",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "categoryId",
          "in" : "query",
          "description" : "the category id to filter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "keyword",
          "in" : "query",
          "description" : "the keyword to search (matches many fields)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "simpleKeyword",
          "in" : "query",
          "description" : "the simple keyword to search",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_14"
            }
          },
          "400" : {
            "description" : "invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        }
      }
    },
    "/providers/{id}" : {
      "get" : {
        "tags" : [ "provider" ],
        "description" : "Get provder details",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the provider id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_15"
            }
          },
          "400" : {
            "description" : "invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "provider not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        }
      }
    },
    "/providers/{id}/missions" : {
      "get" : {
        "tags" : [ "mission" ],
        "description" : "Get completed missions from provider",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the provider id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "the search offset",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the search limit",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_16"
            }
          },
          "400" : {
            "description" : "invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "provider not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        }
      }
    },
    "/providers/{id}/packages" : {
      "get" : {
        "tags" : [ "package" ],
        "description" : "Get all packages from provider",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the provider id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/inline_response_200_17"
              }
            }
          },
          "400" : {
            "description" : "invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "provider not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        }
      }
    },
    "/providers/{id}/reviews" : {
      "get" : {
        "tags" : [ "review" ],
        "description" : "Get reviews for provider",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the provider id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "the search offset",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the search limit",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_18"
            }
          },
          "400" : {
            "description" : "invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "provider not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        }
      }
    },
    "/register" : {
      "post" : {
        "tags" : [ "auth" ],
        "description" : "register new user",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "register information",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body_5"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LoginRes"
            }
          },
          "400" : {
            "description" : "invalid request | email already registered",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        }
      }
    },
    "/requests" : {
      "get" : {
        "tags" : [ "request" ],
        "description" : "Get package requests of current user",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "the search offset",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the search limit",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "the mission status",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_19"
            }
          },
          "400" : {
            "description" : "invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "missing bearer token",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/reset-password" : {
      "post" : {
        "tags" : [ "auth" ],
        "description" : "Reset password with code received from the email",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "request values",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body_6"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "invalid password or code",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "user not found"
          }
        }
      }
    },
    "/saved-packages" : {
      "get" : {
        "tags" : [ "package" ],
        "description" : "Get all saved packages for current user",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/inline_response_200_5"
              }
            }
          },
          "401" : {
            "description" : "missing bearer token",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/saved-packages/{id}" : {
      "post" : {
        "tags" : [ "package" ],
        "description" : "Save package",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the package id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "invalid parameters | already saved",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "package not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "description" : "Delete saved package",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the package id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "invalid parameters | package is not saved",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "401" : {
            "description" : "missing bearer token",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          },
          "404" : {
            "description" : "package not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorMsg"
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "Bearer" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "MissionEstimationReq" : {
      "type" : "object",
      "required" : [ "distance", "launchTime", "speed", "time" ],
      "properties" : {
        "launchTime" : {
          "type" : "string",
          "format" : "date"
        },
        "speed" : {
          "type" : "number"
        },
        "distance" : {
          "type" : "number"
        },
        "time" : {
          "type" : "number"
        }
      }
    },
    "MissionTelemetryReq" : {
      "type" : "object",
      "required" : [ "averageSpeed", "completedAt", "distance", "maxSpeed", "minSpeed", "startedAt" ],
      "properties" : {
        "startedAt" : {
          "type" : "string",
          "format" : "date"
        },
        "completedAt" : {
          "type" : "string",
          "format" : "date"
        },
        "distance" : {
          "type" : "number"
        },
        "averageSpeed" : {
          "type" : "number"
        },
        "maxSpeed" : {
          "type" : "number"
        },
        "minSpeed" : {
          "type" : "number"
        },
        "gallery" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/inline_response_200_2_gallery"
          }
        }
      }
    },
    "AssignDroneReq" : {
      "type" : "object",
      "required" : [ "droneId", "scheduledLaunchDate" ],
      "properties" : {
        "droneId" : {
          "type" : "string"
        },
        "scheduledLaunchDate" : {
          "type" : "string"
        },
        "specialRequirements" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "notes" : {
          "type" : "string"
        }
      }
    },
    "Service" : {
      "type" : "object",
      "required" : [ "description", "name", "pricing" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "pricing" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "packages" : {
          "type" : "array",
          "description" : "Service must have at least 1 package",
          "items" : {
            "$ref" : "#/definitions/Package"
          }
        }
      }
    },
    "Package" : {
      "type" : "object",
      "required" : [ "description", "name", "price" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "deliverySpeed" : {
          "type" : "number"
        },
        "costPerMile" : {
          "type" : "number"
        },
        "insuranceClaim" : {
          "type" : "number"
        },
        "maxWeight" : {
          "type" : "number"
        },
        "price" : {
          "type" : "number"
        },
        "discountPrice" : {
          "type" : "number"
        }
      }
    },
    "Drone" : {
      "type" : "object",
      "required" : [ "name", "serialNumber", "type" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "serialNumber" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "minSpeed" : {
          "type" : "number"
        },
        "maxSpeed" : {
          "type" : "number"
        },
        "maxFlightTime" : {
          "type" : "number"
        },
        "maxCargoWeight" : {
          "type" : "number"
        },
        "maxAltitude" : {
          "type" : "number"
        },
        "cameraResolution" : {
          "type" : "number"
        },
        "videoResolution" : {
          "type" : "number"
        },
        "hasWiFi" : {
          "type" : "boolean"
        },
        "hasBluetooth" : {
          "type" : "boolean"
        },
        "engineType" : {
          "type" : "string"
        },
        "numberOfRotors" : {
          "type" : "integer"
        },
        "hasAccelerometer" : {
          "type" : "boolean"
        },
        "hasGyroscope" : {
          "type" : "boolean"
        },
        "hasRadar" : {
          "type" : "boolean"
        },
        "hasGPS" : {
          "type" : "boolean"
        },
        "hasObstacleSensors" : {
          "type" : "boolean"
        },
        "hasUltraSonicAltimeter" : {
          "type" : "boolean"
        },
        "imageUrl" : {
          "type" : "string"
        },
        "mileage" : {
          "type" : "number"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "in-motions", "idle-ready", "idle-busy" ]
        },
        "specificationContent" : {
          "type" : "string"
        },
        "specificationImageUrl" : {
          "type" : "string"
        },
        "specificationPDFUrl" : {
          "type" : "string"
        }
      }
    },
    "LoginRes" : {
      "type" : "object",
      "properties" : {
        "accessToken" : {
          "type" : "string"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        }
      }
    },
    "Category" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "Notification" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "user" : {
          "type" : "string"
        },
        "values" : {
          "type" : "object",
          "properties" : { }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date"
        },
        "read" : {
          "type" : "boolean"
        },
        "readAt" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "MissionPublic" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "package" : {
          "$ref" : "#/definitions/Package"
        }
      }
    },
    "Rating" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "number"
        },
        "sum" : {
          "type" : "number"
        },
        "avg" : {
          "type" : "number"
        }
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "role" : {
          "type" : "string"
        }
      }
    },
    "Address" : {
      "type" : "object",
      "properties" : {
        "coordinates" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          }
        },
        "line1" : {
          "type" : "string"
        },
        "line2" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "primary" : {
          "type" : "boolean"
        }
      }
    },
    "DroneUpdateReq" : {
      "type" : "object",
      "required" : [ "lat", "lng" ],
      "properties" : {
        "lat" : {
          "type" : "number"
        },
        "lng" : {
          "type" : "number"
        }
      }
    },
    "ErrorMsg" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "string"
        },
        "status" : {
          "type" : "number"
        }
      }
    },
    "inline_response_200_items" : {
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "droneId" : {
          "type" : "string"
        },
        "lat" : {
          "type" : "number"
        },
        "lng" : {
          "type" : "number"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "inline_response_200" : {
      "properties" : {
        "total" : {
          "type" : "integer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/inline_response_200_items"
          }
        }
      }
    },
    "body" : {
      "type" : "object",
      "required" : [ "email" ],
      "properties" : {
        "email" : {
          "type" : "string"
        }
      }
    },
    "body_1" : {
      "type" : "object",
      "required" : [ "email", "password" ],
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      }
    },
    "body_2" : {
      "type" : "object",
      "required" : [ "email", "name" ],
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "role" : {
          "type" : "string",
          "description" : "user role",
          "enum" : [ "provider", "consumer", "admin" ]
        }
      }
    },
    "body_3" : {
      "type" : "object",
      "required" : [ "rating" ],
      "properties" : {
        "publicFeedback" : {
          "type" : "string"
        },
        "privateFeedback" : {
          "type" : "string"
        },
        "rating" : {
          "type" : "number"
        }
      }
    },
    "inline_response_200_1" : {
      "properties" : {
        "total" : {
          "type" : "integer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MissionPublic"
          }
        }
      }
    },
    "inline_response_200_2_pilot" : {
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "inline_response_200_2_telemetry" : {
      "properties" : {
        "lat" : {
          "type" : "number"
        },
        "long" : {
          "type" : "number"
        },
        "speed" : {
          "type" : "number"
        },
        "distance" : {
          "type" : "number"
        }
      }
    },
    "inline_response_200_2_gallery" : {
      "properties" : {
        "thumbnailUrl" : {
          "type" : "string"
        },
        "videoUrl" : {
          "type" : "string"
        },
        "imageUrl" : {
          "type" : "string"
        }
      }
    },
    "inline_response_200_2" : {
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "pilot" : {
          "$ref" : "#/definitions/inline_response_200_2_pilot"
        },
        "startingPoint" : {
          "$ref" : "#/definitions/Address"
        },
        "destinationPoint" : {
          "$ref" : "#/definitions/Address"
        },
        "startedAt" : {
          "type" : "string"
        },
        "completedAt" : {
          "type" : "string"
        },
        "telemetry" : {
          "$ref" : "#/definitions/inline_response_200_2_telemetry"
        },
        "eta" : {
          "type" : "number"
        },
        "frontCameraUrl" : {
          "type" : "string"
        },
        "backCameraUrl" : {
          "type" : "string"
        },
        "gallery" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/inline_response_200_2_gallery"
          }
        }
      }
    },
    "inline_response_200_3" : {
      "properties" : {
        "total" : {
          "type" : "integer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Package"
          }
        }
      }
    },
    "inline_response_200_4" : {
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "longDescription" : {
          "type" : "string"
        },
        "shortDescription" : {
          "type" : "string"
        },
        "imageUrl" : {
          "type" : "string"
        },
        "thumbnailUrl" : {
          "type" : "string"
        },
        "catalogName" : {
          "type" : "string"
        },
        "price" : {
          "type" : "number"
        },
        "bestseller" : {
          "type" : "boolean"
        },
        "promoted" : {
          "type" : "boolean"
        },
        "discount" : {
          "type" : "boolean"
        },
        "isSaved" : {
          "type" : "boolean"
        },
        "provider" : {
          "$ref" : "#/definitions/inline_response_200_2_pilot"
        }
      }
    },
    "inline_response_200_5" : {
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "imageUrl" : {
          "type" : "string"
        },
        "thumbnailUrl" : {
          "type" : "string"
        },
        "price" : {
          "type" : "number"
        },
        "bestseller" : {
          "type" : "boolean"
        },
        "promoted" : {
          "type" : "boolean"
        },
        "discount" : {
          "type" : "boolean"
        },
        "provider" : {
          "$ref" : "#/definitions/inline_response_200_2_pilot"
        }
      }
    },
    "body_4" : {
      "type" : "object",
      "required" : [ "destinationPoint", "phoneNumber", "recipientName" ],
      "properties" : {
        "recipientName" : {
          "type" : "string"
        },
        "phoneNumber" : {
          "type" : "string"
        },
        "destinationPoint" : {
          "$ref" : "#/definitions/Address"
        },
        "launchDate" : {
          "type" : "string"
        },
        "additionalInfo" : {
          "type" : "string"
        }
      }
    },
    "inline_response_200_6" : {
      "properties" : {
        "pendingRequestCount" : {
          "type" : "number"
        },
        "scheduledMissionCount" : {
          "type" : "number"
        },
        "inProgressMissionCount" : {
          "type" : "number"
        },
        "completedMissionCount" : {
          "type" : "number"
        },
        "droneCount" : {
          "type" : "number"
        }
      }
    },
    "inline_response_200_7_items" : {
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "imageUrl" : {
          "type" : "string"
        },
        "thumbnailUrl" : {
          "type" : "string"
        },
        "serialNumber" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "mileage" : {
          "type" : "number"
        },
        "minSpeed" : {
          "type" : "number"
        },
        "maxSpeed" : {
          "type" : "number"
        },
        "maxFlightTime" : {
          "type" : "number"
        },
        "maxCargoWeight" : {
          "type" : "number"
        }
      }
    },
    "inline_response_200_7" : {
      "properties" : {
        "total" : {
          "type" : "integer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/inline_response_200_7_items"
          }
        }
      }
    },
    "inline_response_200_8" : {
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "drone status"
        },
        "currentLocation" : {
          "type" : "array",
          "description" : "[long, lat] coordinate",
          "items" : {
            "type" : "number"
          }
        }
      }
    },
    "inline_response_200_9" : {
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "startedAt" : {
          "type" : "string"
        },
        "serviceName" : {
          "type" : "string"
        },
        "startingPoint" : {
          "$ref" : "#/definitions/Address"
        },
        "destinationPoint" : {
          "$ref" : "#/definitions/Address"
        },
        "rating" : {
          "type" : "integer"
        },
        "whatToBeDelivered" : {
          "type" : "string"
        },
        "weight" : {
          "type" : "number"
        }
      }
    },
    "inline_response_200_10" : {
      "properties" : {
        "date" : {
          "type" : "string"
        },
        "count" : {
          "type" : "number"
        }
      }
    },
    "inline_response_200_11_customer" : {
      "properties" : {
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        },
        "phone" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "photoUrl" : {
          "type" : "string"
        }
      }
    },
    "inline_response_200_11_items" : {
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "serviceName" : {
          "type" : "string"
        },
        "launchDate" : {
          "type" : "string"
        },
        "startingPoint" : {
          "$ref" : "#/definitions/Address"
        },
        "destinatitonPoint" : {
          "$ref" : "#/definitions/Address"
        },
        "distance" : {
          "type" : "number"
        },
        "payout" : {
          "type" : "number"
        },
        "packageName" : {
          "type" : "string"
        },
        "whatToBeDelivered" : {
          "type" : "string"
        },
        "weight" : {
          "type" : "number"
        },
        "customer" : {
          "$ref" : "#/definitions/inline_response_200_11_customer"
        }
      }
    },
    "inline_response_200_11" : {
      "properties" : {
        "total" : {
          "type" : "integer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/inline_response_200_11_items"
          }
        }
      }
    },
    "inline_response_200_12" : {
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "serviceName" : {
          "type" : "string"
        },
        "launchDate" : {
          "type" : "string"
        },
        "startingPoint" : {
          "$ref" : "#/definitions/Address"
        },
        "destinatitonPoint" : {
          "$ref" : "#/definitions/Address"
        },
        "distance" : {
          "type" : "number"
        },
        "payout" : {
          "type" : "number"
        },
        "packageName" : {
          "type" : "string"
        },
        "whatToBeDelivered" : {
          "type" : "string"
        },
        "weight" : {
          "type" : "number"
        },
        "customer" : {
          "$ref" : "#/definitions/inline_response_200_11_customer"
        },
        "mission" : {
          "$ref" : "#/definitions/inline_response_200_2"
        }
      }
    },
    "inline_response_200_13_items" : {
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "pricing" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "inline_response_200_13" : {
      "properties" : {
        "total" : {
          "type" : "integer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/inline_response_200_13_items"
          }
        }
      }
    },
    "inline_response_200_14_items" : {
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "location" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Address"
          }
        },
        "name" : {
          "type" : "string"
        },
        "imageUrl" : {
          "type" : "string"
        },
        "thumbnailUrl" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "minPrice" : {
          "type" : "number"
        },
        "maxPrice" : {
          "type" : "number"
        },
        "rating" : {
          "$ref" : "#/definitions/Rating"
        },
        "packages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/inline_response_200_2_pilot"
          }
        }
      }
    },
    "inline_response_200_14" : {
      "properties" : {
        "total" : {
          "type" : "integer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/inline_response_200_14_items"
          }
        }
      }
    },
    "inline_response_200_15" : {
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "location" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Address"
          }
        },
        "name" : {
          "type" : "string"
        },
        "imageUrl" : {
          "type" : "string"
        },
        "thumbnailUrl" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "rating" : {
          "$ref" : "#/definitions/Rating"
        }
      }
    },
    "inline_response_200_16_items" : {
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "packageName" : {
          "type" : "string"
        },
        "completedAt" : {
          "type" : "string"
        }
      }
    },
    "inline_response_200_16" : {
      "properties" : {
        "total" : {
          "type" : "integer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/inline_response_200_16_items"
          }
        }
      }
    },
    "inline_response_200_17" : {
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "imageUrl" : {
          "type" : "string"
        },
        "thumbnailUrl" : {
          "type" : "string"
        },
        "catalogName" : {
          "type" : "string"
        },
        "price" : {
          "type" : "number"
        },
        "bestseller" : {
          "type" : "boolean"
        },
        "promoted" : {
          "type" : "boolean"
        },
        "discount" : {
          "type" : "boolean"
        }
      }
    },
    "inline_response_200_18_user" : {
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "gravatarUrl" : {
          "type" : "string"
        }
      }
    },
    "inline_response_200_18_items" : {
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "rating" : {
          "type" : "number"
        },
        "createdAt" : {
          "type" : "string"
        },
        "publicFeedback" : {
          "type" : "string"
        },
        "user" : {
          "$ref" : "#/definitions/inline_response_200_18_user"
        }
      }
    },
    "inline_response_200_18" : {
      "properties" : {
        "total" : {
          "type" : "integer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/inline_response_200_18_items"
          }
        }
      }
    },
    "body_5" : {
      "type" : "object",
      "required" : [ "email", "firstName", "lastName", "password", "phone" ],
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "role" : {
          "type" : "string",
          "description" : "user role",
          "enum" : [ "provider", "consumer", "admin" ]
        }
      }
    },
    "inline_response_200_19_mission" : {
      "properties" : {
        "id" : {
          "type" : "string"
        }
      }
    },
    "inline_response_200_19_items" : {
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "launchDate" : {
          "type" : "string"
        },
        "mission" : {
          "$ref" : "#/definitions/inline_response_200_19_mission"
        },
        "provider" : {
          "$ref" : "#/definitions/inline_response_200_2_pilot"
        },
        "package" : {
          "$ref" : "#/definitions/inline_response_200_2_pilot"
        }
      }
    },
    "inline_response_200_19" : {
      "properties" : {
        "total" : {
          "type" : "integer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/inline_response_200_19_items"
          }
        }
      }
    },
    "body_6" : {
      "type" : "object",
      "required" : [ "code", "email", "password" ],
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      }
    }
  }
}